@model ElectBill.Models.Customer
@using System.Web.Mvc
@using ElectBill.Models

<link href="~/Content/Cust_css/createBill.css?1.1" rel="stylesheet" />
<style>
    @@media (min-width: 768px) {
    .menu li {
        padding: 6px 10px;
        z-index: 100;
    }
}
    .nav a{
        color: white;
        text-decoration: none;
        font-size: 17px;
    }
    .itemheaditem {
        display: flex;
        justify-content: space-between;
         margin-top: 14px;
    }
    .itemhead {
        margin-top: 0px;
       
    }
    .addbtn {
        display: inline-block;
        outline: none;
        cursor: pointer;
        border-radius: 3px;
        font-size: 12px;
        font-weight: 500;
        line-height: 16px;
        padding: 2px 7px;
        height: 30px;
        /* min-height: 32px; */
        border: none;
        color: #fff;
        background-color: rgb(88, 101, 242);
        transition: background-color .17s ease, color .17s ease;
        width: fit-content !important;
    }
    input[type=text], select, textarea {
        width: 100%;
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 4px;
        resize: vertical;
        margin: 10px 0px 4px 0px;
    }
    td{
        padding:0px 10px;
    }
        td input[type=text]{
            margin:0px;
        }
    #items{
         max-height: 50px !important;
        overflow-y: auto;
        /*overflow:auto;*/
    }
    .displayrow {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
    .roww{
        width:25%;

    }
    .rowdetail {
        margin: 0 47px 0 0;
        width: 25%;
    }
    .itemshead{
        margin-top:10px;
    }
        
</style>

<div class="CreateBcontainer">
  
  @*  <h3 style="color:green;">@TempData["alertsuccess"]</h3>*@
    <p style="color:red;">@TempData["message"]</p>
    <p style="color:red;">@TempData["atleastmessage"]</p>
    <div class="fullpart">
        <div class="billpart">

            @using (Html.BeginForm("CreateBill", "Home", FormMethod.Post))
            {
                <div class="itemhead">
                    <h3>Customer Details</h3>
                    <div>
                        <button class="addbtn" type="submit" style="width: 155px !important;height: 38px;">Save All Details</button>
                    </div>

                </div>
                <div class="rows">
                    <div class="rowdetail">

                   
                        @Html.TextBoxFor(e => e.cust_Name, null, new { placeholder = "Customer Name", @class = "form-control" })
                        @Html.ValidationMessageFor(e => e.cust_Name, null, new { @class = "text-danger " })
                    </div>
                    <div class="rowdetail">

                      
                        @Html.TextBoxFor(e => e.cust_Mobile, null, new { placeholder = "Mobile", @class = "form-control" })
                        @Html.ValidationMessageFor(e => e.cust_Mobile, null, new { @class = "text-danger " })
                    </div>
                </div>
              
                <div class="itemshead">
                    <h3>Item Details</h3>
                    @*<div>
                        <button class="addbtn" type="submit">Save All Details</button>
                    </div>*@

                </div>
                <div class="displayrow">
                    <div class="roww" >
                      @* <input type="text" id="productName" placeholder="Product Name" >*@
                          @Html.DropDownListFor(model => model.ProductName, ViewBag.AllProduct as SelectList, "Select Products", new { @class = "form-control", id= "productName" })
                  
                    </div>
                    <div class="roww">

                        <input type="number" id="Price" placeholder="Price" >
                    </div>
                    <div class="roww">

                        <input  type="number" id="Quantity" placeholder="Quantity" >
                    </div>
                    
                        <button class="addbtn" type="button" id="addbutton" style="width: 155px !important; height: 38px;">Add</button>
                  
                </div>
                <!--<div class="popdesign">
                    <h3>Item Details</h3>
                    <div class="row">-->
                        @*  <label for="productName">Product Name</label>*@
                        <!--<input type="text" id="productName" placeholder="Product Name" required>-->
                          @*@Html.DropDownListFor(model => model.ProductName, ViewBag.AllProduct as SelectList, "Select Products", new { @class = "form-control", id= "productName" })*@
                  
                <!--</div>
                    <div class="row" style=" margin-bottom: 5px;">-->
                        @*   <label for="Price">Price</label>*@
                        <!--<input type="number" id="Price" placeholder="Price" required>
                    </div>
                    <div class="row">-->
                        @*  <label for="Quantity">Quantity</label>*@

                        <!--<input style="padding-bottom:5px;" type="number" id="Quantity" placeholder="Quantity" required>
                    </div>
                    <div class="row" style="margin-top:20px;">
                        <button class="addbtn" type="button" id="addbutton">Add</button>-->

                        @* <button class="addbtn" type="button" onclick="closepop()" style="background:red;box-shadow:none;">Close</button>*@
                    <!--</div>
                </div>-->

                @*<div class="itemheaditem">
                <h3>Item List</h3>
                <div>

                </div>

            </div>*@
                <table id="items">
                    <thead>
                        <tr><th>Product Name</th><th>Price</th><th>Quantity</th><th></th></tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            }

        </div>
        
    </div>

    @*<div class="overlay" onclick="off()"></div>
        <div class="popcontainer" onclick="off()"></div>*@

</div>


<script>

     // $(document).ready(setTimeout(popup, 5000));

     $(document).ready(function () {
            $('#productName').change(function () {
                var selectedProductName = $(this).val();
                updatePrice(selectedProductName);
            });

            function updatePrice(selectedProductName) {
                $.ajax({
                    url: '@Url.Action("GetPriceForProduct", "Home")',
                    type: 'GET',
                    data: { productName: selectedProductName },
                    success: function (result) {
                        $('#Price').val(result);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching product price:', error);
                    }
                });
            }
        });


    //document.getElementById('addbutton').addEventListener('click', function () {
    //    const productName = document.getElementById('productName').value;
    //    const price = document.getElementById('Price').value;
    //    const quantity = document.getElementById('Quantity').value;

    //    if (productName && price && quantity) {
    //        const tbody = document.querySelector('#items tbody');
    //        const index = tbody.children.length;
    //        const tr = document.createElement('tr');
    //       // element.setAttribute("id", "my-id");
    //        tr.innerHTML = `
    //        <td><input type="text" name="Items[${index}].Item_Name" value="${productName}" readonly required style="border:none;"></td>
    //        <td><input type="number" name="Items[${index}].Item_Price" value="${price}" readonly required style="border:none;"></td>
    //        <td><input type="number" name="Items[${index}].Quantity" value="${quantity}" readonly required style="border:none;"></td>
    //        <td><button class="removebtn addbtn" type="button">Remove</button></td>`;

    //        tr.querySelector('.removebtn').addEventListener('click', function () {
    //            Swal.fire({
    //                title: "Are you sure?",
    //                text: "You won't be able to revert this!",
    //                icon: "warning",
    //                showCancelButton: true,
    //                confirmButtonColor: "#3085d6",
    //                cancelButtonColor: "#d33",
    //                confirmButtonText: "Yes, delete it!"
    //            }).then((result) => {
    //                if (result.isConfirmed) {
    //                    tr.remove();
    //                    Swal.fire({
    //                        title: "Deleted!",
    //                        text: "Your file has been deleted.",
    //                        icon: "success"
    //                    });


    //                }
    //            });

    //        });

    //        tbody.appendChild(tr);

    //        document.getElementById('productName').value = '';
    //        document.getElementById('Price').value = '';
    //        document.getElementById('Quantity').value = '';
    //    } else {
    //        alert('Please fill out all fields.');
    //    }
    //});
    document.getElementById('addbutton').addEventListener('click', function () {
        const productName = document.getElementById('productName').value;
        const price = document.getElementById('Price').value;
        const quantity = document.getElementById('Quantity').value;

        if (productName && price && quantity) {
            const tbody = document.querySelector('#items tbody');
            let found = false;

            // Check if the product already exists
            tbody.querySelectorAll('tr').forEach((row) => {
                const existingProductName = row.querySelector('input[name$="Item_Name"]').value;
                if (existingProductName === productName) {
                    // Product found, increase the quantity
                    const quantityInput = row.querySelector('input[name$="Quantity"]');
                    quantityInput.value = parseInt(quantityInput.value) + parseInt(quantity);
                    found = true;
                }
            });

            // If product is not found, add a new row
            if (!found) {
                const index = tbody.children.length;
                const tr = document.createElement('tr');
                tr.innerHTML = `
            <td><input type="text" name="Items[${index}].Item_Name" value="${productName}" readonly required style="border:none;"></td>
            <td><input type="number" name="Items[${index}].Item_Price" value="${price}" readonly required style="border:none;"></td>
            <td><input type="number" name="Items[${index}].Quantity" value="${quantity}" readonly required style="border:none;"></td>
            <td><button class="removebtn addbtn" type="button">Remove</button></td>`;

                tr.querySelector('.removebtn').addEventListener('click', function () {
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You won't be able to revert this!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, delete it!"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            tr.remove();
                            Swal.fire({
                                title: "Deleted!",
                                text: "Your file has been deleted.",
                                icon: "success"
                            });
                        }
                    });
                });

                tbody.appendChild(tr);
            }

            // Clear input fields after adding/updating the product
            document.getElementById('productName').value = '';
            document.getElementById('Price').value = '';
            document.getElementById('Quantity').value = '';
        } else {
            alert('Please fill out all fields.');
        }
    });


</script>
